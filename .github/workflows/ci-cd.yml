name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-client-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push client
        uses: docker/build-push-action@v6
        with:
          push: true
          context: /client
          tags: ${{ secrets.DOCKERHUB_REPO }}:client-latest

  build-server-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file for server
        run: |
          cat > .env << EOF
          PORT=${{ secrets.PORT }}
          MONGO_URL=${{ secrets.MONGO_URL }}
          SECRET_TOKEN=${{ secrets.SECRET_TOKEN }}
          SALT_ROUNDS=${{ secrets.SALT_ROUNDS }}
          EOF

      - name: Build and push server
        uses: docker/build-push-action@v6
        with:
          push: true
          context: /server
          tags: ${{ secrets.DOCKERHUB_REPO }}:server-latest
          secret-files: |
            "env_file=.env"

  deploy:
    needs: [build-client-docker-image, build-server-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            cd ./www
            export REACT_PIZZA_CLIENT_IMAGE=${{ secrets.DOCKERHUB_REPO }}:client-latest
            export REACT_PIZZA_SERVER_IMAGE=${{ secrets.DOCKERHUB_REPO }}:server-latest
            docker compose down react-pizza-client react-pizza-server
            docker rmi ${{ secrets.DOCKERHUB_REPO }}:client-latest
            docker rmi ${{ secrets.DOCKERHUB_REPO }}:server-latest
            docker compose up traefik react-pizza-client react-pizza-server -d --no-recreate
